title(main="GAL order 1 links with first nearest neighbours in red")
plot(distan, as.matrix(df[, c("lon_x", "lat_y")]))
title(main="GAL order 1 links with first nearest neighbours in red")
col.knn <- knearneigh(as.matrix(df[, c("lon_x", "lat_y")]), k=1)
col.knn
plot(knn2nb(col.knn), as.matrix(df[, c("lon_x", "lat_y")]), add=TRUE, col="red", length=0.08)
plot(distan, as.matrix(df[, c("lon_x", "lat_y")]))
distan <- dnearneigh(as.matrix(df[, c("lon_x", "lat_y")]), 0.1185693, 0.5618655)
plot(distan, as.matrix(df[, c("lon_x", "lat_y")]))
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
dev = "svg",
fig.width = 7,
fig.height = 5,
fig.align = "center",
tidy = TRUE,
tidy.opts = list(width.cutoff = 50)
)
library(tidyverse)
library(extrafont)
loadfonts(quiet = TRUE)
theme_set(theme_bw(base_size = 16, base_family = "Open Sans"))
library(ape)
library(pgirmess)
set.seed(1)
par(mfrow = c(1, 3))
m <- matrix(0, 9, 9)
m[1:4, ] <- 1
image(m, col = 0:1, xlim = c(-.05, .93), ylim = c(-.05, .93), main = "Positive spatial autocorrelation", cex.main = 2.5, cex.axis = 2, xaxt = "n", yaxt = "n")
image(matrix(1:0, 9, 9), col = 0:1, xlim = c(-.05, .93), ylim = c(-.05, .93), main = "Negative spatial autocorrelation", cex.main = 2.5, cex.axis = 2, xaxt = "n", yaxt = "n")
image(matrix(sample(c(0, 1), 81, replace = TRUE), 9, 9), col = 0:1, xlim = c(-.05, .93), ylim = c(-.05, .93), main = "No spatial autocorrelation", cex.main = 2.5, cex.axis = 2, xaxt = "n", yaxt = "n")
set.seed(1)
par(mfrow = c(1, 3))
m <- matrix(0, 9, 9)
m[1:4, ] <- 1
image(m, col = 0:1, xlim = c(-.05, .93), ylim = c(-.05, .93), main = "Positive spatial autocorrelation", cex.main = 2.5, cex.axis = 2, xaxt = "n", yaxt = "n", sub = "Positive I", cex.sub = 4)
image(matrix(1:0, 9, 9), col = 0:1, xlim = c(-.05, .93), ylim = c(-.05, .93), main = "Negative spatial autocorrelation", cex.main = 2.5, cex.axis = 2, xaxt = "n", yaxt = "n", sub = "Negative I", cex.sub = 4)
image(matrix(sample(c(0, 1), 81, replace = TRUE), 9, 9), col = 0:1, xlim = c(-.05, .93), ylim = c(-.05, .93), main = "No spatial autocorrelation", cex.main = 2.5, cex.axis = 2, xaxt = "n", yaxt = "n", sub = "I around 0", cex.sub = 4)
df <- read_table2("data/bird.diversity.txt")
df <- janitor::clean_names(df) # Clean column names
df
ggplot(df, aes(x = tree_diversity, y = bird_diversity)) +
geom_point(size = 3) +
geom_smooth(method = "lm")
leaflet(data = df) %>% addTiles() %>%
addMarkers(~lon_x, ~lat_y)
ggplot(df, aes(x = lon_x, y = lat_y, size = bird_diversity)) +
geom_point()
sample_distances <- as.matrix(dist(cbind(df$lon_x, df$lat_y)))
sample_distances_inv <- 1 / sample_distances
diag(sample_distances_inv) <- 0
sample_distances_inv[1:6, 1:6] # Show a subset of the data
moran <- Moran.I(df$bird_diversity, sample_distances_inv)
-1/(nrow(df) -1) # Expected Moran's I
clog <- correlog(df[, c("lon_x", "lat_y")], z = df$bird_diversity)
plot(clog)
library(spdep)
distan <- dnearneigh(as.matrix(df[, c("lon_x", "lat_y")]), 0.1185693, 0.5618655)
plot(distan, as.matrix(df[, c("lon_x", "lat_y")]))
distan <- dnearneigh(as.matrix(df[, c("lon_x", "lat_y")]), 0.1185693, 0.5618655)
plot(distan, as.matrix(df[, c("lon_x", "lat_y")]))
xaringan:::inf_mr()
plot(distan, as.matrix(df[, c("lon_x", "lat_y")]), lwd = 0.1)
library(igraph)
graph.adjacency(distan)
nb_to_df <- function(nb, coords){
x <- coords[, 1]
y <- coords[, 2]
n <- length(nb)
cardnb <- card(nb)
i <- rep(1:n, cardnb)
j <- unlist(nb)
return(data.frame(x=x[i], xend=x[j],
y=y[i], yend=y[j]))
}
nb_to_df(distan, as.matrix(df[, c("lon_x", "lat_y")]))
df <- nb_to_df(distan, as.matrix(df[, c("lon_x", "lat_y")]))
df %>%
ggplot() +
geom_segment(aes(x=x, xend=xend, y=y, yend=yend),
data=nb_df)
df %>%
ggplot() +
geom_segment(aes(x=x, xend=xend, y=y, yend=yend),
data=df)
df %>%
ggplot() +
geom_segment(aes(
x = x,
xend = xend,
y = y,
yend = yend
), size = 0.1,
data = df)
df %>%
ggplot() +
geom_segment(aes(
x = x,
xend = xend,
y = y,
yend = yend
), size = 0.1, alpha = 0.5
data = df)
df %>%
ggplot() +
geom_segment(aes(
x = x,
xend = xend,
y = y,
yend = yend
), size = 0.1, alpha = 0.5,
data = df)
library(packfor)
relaimpo::calc.relimp(mod1)
library(relaimpo)
calc.relimp(mod1)
library(relaimpo)
calc.relimp(mod1)
calc.relimp(mod2)
# Simple lm model to predict bird diversity
mod1 <- lm(bird_diversity ~ tree_diversity, data = df)
mod1
calc.relimp(mod1)
mod3 <- lm(bird_diversity ~ tree_diversity + lon_x, data = df)
summary(mod3)
calc.relimp(mod3)
gls
library(nlme)
mod.cor<-gls(bird_diversity ~ tree_diversity, correlation = corGaus(form=~lon_x + lat_y,nugget=TRUE))
mod.cor<-gls(bird_diversity ~ tree_diversity, correlation = corGaus(form=~lon_x + lat_y,nugget=TRUE), data = df)
mod.cor
mod1 <- gls(bird_diversity ~ tree_diversity, data = df)
mod1
summary(mod1)
mod2 <- gls(bird_diversity ~ tree_diversity, correlation = corGaus(form=~lon_x + lat_y,nugget=TRUE), data = df)
mod1 <- gls(bird_diversity ~ tree_diversity, data = df)
mod1
summary(mod1)
summary(mod2)
AIC(mod1, mod2)
mod1 <- gls(bird_diversity ~ tree_diversity, data = df)
mod2 <- gls(bird_diversity ~ tree_diversity, correlation = corGaus(form=~lon_x + lat_y,nugget=TRUE), data = df)
mod3 <- gls(bird_diversity ~ tree_diversity, correlation = corLin(form=~lon_x + lat_y,nugget=TRUE), data = df)
mod4 <- gls(bird_diversity ~ tree_diversity, correlation = corExp(form=~lon_x + lat_y,nugget=TRUE), data = df)
mod5 <- gls(bird_diversity ~ tree_diversity, correlation = corSpher(form=~lon_x + lat_y,nugget=TRUE), data = df)
AIC(mod1, mod2, mod3, mod4, mod5)
mod4 <- gls(bird_diversity ~ tree_diversity, correlation = corExp(form=~lon_x + lat_y,nugget=TRUE), data = df)
mod2 <- gls(bird_diversity ~ tree_diversity, correlation = corGaus(form=~lon_x + lat_y,nugget=F), data = df)
mod4 <- gls(bird_diversity ~ tree_diversity, correlation = corExp(form=~lon_x + lat_y,nugget=F), data = df)
AIC(mod1, mod2, mod3, mod4, mod5)
hist(df$bird_diversity)
mod <- gls(bird_diversity ~ tree_diversity, data = df)
plot(mod)
semivario <- Variogram(mod, form = ~lon_x + lat_y, resType = "normalized")
plot(semivario)
plot(semivario, smooth = T)
semivario <- Variogram(mod, form = ~lon_x + lat_y)
plot(semivario, smooth = T)
semivario <- Variogram(mod, form = ~lon_x + lat_y, resType = "normalized")
plot(semivario, smooth = T)
styler:::style_selection()
styler:::style_selection()
library(nlme)
mod1 <- gls(bird_diversity ~ tree_diversity, data = df)
mod2 <- gls(bird_diversity ~ tree_diversity, correlation = corGaus(form = ~ lon_x + lat_y, nugget = TRUE), data = df)
mod3 <- gls(bird_diversity ~ tree_diversity, correlation = corLin(form = ~ lon_x + lat_y, nugget = TRUE), data = df)
mod4 <- gls(bird_diversity ~ tree_diversity, correlation = corExp(form = ~ lon_x + lat_y, nugget = TRUE), data = df)
mod5 <- gls(bird_diversity ~ tree_diversity, correlation = corSpher(form = ~ lon_x + lat_y, nugget = TRUE), data = df)
mod6 <- gls(bird_diversity ~ tree_diversity, correlation = corRatio(form = ~ lon_x + lat_y, nugget = TRUE), data = df)
AIC(mod1, mod2, mod3, mod4, mod5, mod6)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
dev = "svg",
fig.width = 7,
fig.height = 5,
fig.align = "center",
tidy = TRUE,
tidy.opts = list(width.cutoff = 50)
)
library(tidyverse)
library(extrafont)
loadfonts(quiet = TRUE)
theme_set(theme_bw(base_size = 16, base_family = "Open Sans"))
library(ape)
library(pgirmess)
library(nlme)
mod2 <- lm(bird_diversity ~ tree_diversity + lon_x * lat_y, data = df)
summary(mod2)
AIC(mod1, mod2)
# Simple lm model to predict bird diversity
mod1 <- lm(bird_diversity ~ tree_diversity, data = df)
summary(mod1)
mod2 <- lm(bird_diversity ~ tree_diversity + lon_x * lat_y, data = df)
summary(mod2)
AIC(mod1, mod2)
mod3 <- lm(bird_diversity ~ tree_diversity + lon_x * lat_Y, data = df)
mod3 <- lm(bird_diversity ~ tree_diversity + lon_x * lat_y, data = df)
summary(mod3)
plot(calc.relimp(mod3))
vegan::RsquareAdj(mod_null)
vegan::RsquareAdj(mod_null)$r.squated
vegan::RsquareAdj(mod_null)$r.squared
plot(mod_null)
modelr::add_residuals(df, mod_null)
modelr::add_residuals(df, mod_null) %>%
ggplot(aes(x = lon_x, y = lat_y, size = resid)) +
geom_point()
modelr::add_residuals(df, mod3) %>%
ggplot(aes(x = lon_x, y = lat_y, size = resid)) +
geom_point()
modelr::add_residuals(df, mod_null) %>%
ggplot(aes(x = lon_x, y = lat_y, size = resid)) +
geom_point()
Variogram(mod2, form = ~lon_x + lat_y)
Variogram(mod2, form = ~lon_x + lat_y) %>% plot
Variogram(mod2, form = ~lon_x + lat_y, type = "normalized") %>% plot
mod2 <- gls(log(bird_diversity) ~ tree_diversity, correlation = corGaus(form = ~ lon_x + lat_y, nugget = TRUE), data = df)
Variogram(mod2, form = ~lon_x + lat_y, type = "normalized") %>% plot
Variogram(mod2, form = ~lon_x + lat_y, type = "normalized") %>% plot(smooth = T)
mod2 <- gls(bird_diversity ~ tree_diversity, correlation = corGaus(form = ~ lon_x + lat_y, nugget = TRUE), data = df)
mod1 <- gls(bird_diversity ~ tree_diversity, data = df)
mod2 <- gls(bird_diversity ~ tree_diversity, correlation = corGaus(form = ~ lon_x + lat_y, nugget = TRUE), data = df)
Variogram(mod2, form = ~lon_x + lat_y, type = "normalized") %>% plot(smooth = T)
summary(mod2)
mod <- gls(bird_diversity ~ 1, data = df)
semivario <-
Variogram(mod, form = ~ lon_x + lat_y, resType = "normalized")
warnings()
plot(semivario, smooth = TRUE)
mod <- gls(bird_diversity ~ 1, data = df)
mod3 <- lm(bird_diversity ~ tree_diversity + lon_x * lat_y, data = df)
semivario <-
Variogram(mod3, form = ~ lon_x + lat_y, resType = "normalized")
plot(semivario)
gstat::variogram(bird_diversity ~ 1, data = df)
library(gstat)
gstat::variogram(bird_diversity ~ 1, data = df)
gstat::variogram(bird_diversity ~ 1, data = df %>% as.data.frame())
gstat::variogram(bird_diversity ~ 1, df %>% as.data.frame())
gstat::variogram(bird_diversity ~ 1, df)
df2 <- df
coordinates(df2) <- ~lon_x + lat_y
gstat::variogram(bird_diversity ~ 1, df2)
gstat::variogram(bird_diversity ~ 1, df2) %>% plot
gstat::variogram(bird_diversity ~ 1, df2,  alpha=c(0,45,90,135)) %>% plot
clog <- correlog(df[, c("lon_x", "lat_y")], z = df$bird_diversity, nbclass = 20)
plot(clog)
clog <- correlog(df[, c("lon_x", "lat_y")], z = df$bird_diversity)
plot(clog)
xaringan:::inf_mr()
styler:::style_selection()
xaringan:::inf_mr()
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
dev = "svg",
fig.width = 7,
fig.height = 5,
fig.align = "center",
tidy = TRUE,
tidy.opts = list(width.cutoff = 50)
)
library(tidyverse)
library(extrafont)
loadfonts(quiet = TRUE)
theme_set(theme_bw(base_size = 16, base_family = "Open Sans"))
library(ape)
library(pgirmess)
library(nlme)
broom::tidy(mod_null)
kable::kable(mod_null)
knitr::kable(mod_null)
pander::pander(mod_null)
xtable::xtable(mod_null)
knitr::kable(summary(mod_null))
knitr::kable(summary(xtable::xtable(mod_null)))
knitr::kable(xtable::xtable(summary(mod_null)))
sjlibrary(sjPlot)
library(sjPlot)
install.packages("sjPlot")
sjPlot::tab_model(mod_null)
library(sjPlot)
BIC(mod_null, mod_lon_lat)
BIC(mod_null, mod_lon_lat)
AIC(mod_null, mod_lon_lat)
combn(1:65)
combn(1:65, m = 1)
combn(1:65, m = 2)
combn(1:65, m = 1:2)
combn(1:65, m = 65)
res <- combn(1:65, m = 3)
res
View(res)
res <- t)combn(1:65, m = 3))
res <- t(combn(1:65, m = 3))
View(res)
res <- t(combn(1:65, m = 4))
res <- t(combn(1:65, m = 10))
res <- t(combn(1:65, m = 5))
res <- t(combn(1:5, m = 3))
View(res)
res <- t(combn(1:5, m = 5))
View(res)
res <- t(combn(1:5, m = 2))
View(res)
100e6*0.3
100e6*0.3/60
100e6*0.3/60/60
100e6
100e6*0.3
100e6*0.3/60/60
combn(1:5, m = 5)
combn(1:5, m = 2)
ncol(combn(1:5, m = 2))
ncol(combn(1:65, m = 2))
ncol(combn(1:65, m = 2)) +ncol(combn(1:65, m = 3)) +ncol(combn(1:65, m = 4)) + ncol(combn(1:65, m = 5))
ncol(combn(1:65, m = 5))
ncol(combn(1:65, m = 6))
ncol(combn(1:10, m = 2)) +ncol(combn(1:10, m = 3)) +ncol(combn(1:10, m = 4)) + ncol(combn(1:10, m = 5))
ncol(combn(1:10, m = 2)) +ncol(combn(1:10, m = 3)) +ncol(combn(1:10, m = 4)) + ncol(combn(1:10, m = 5)) + ncol(combn(1:10, m = 6)) +
ncol(combn(1:10, m = 7)) +ncol(combn(1:10, m = 8))+ncol(combn(1:10, m = 9))+ncol(combn(1:10, m = 10))
ncol(combn(1:10, m = 2)) +ncol(combn(1:10, m = 3)) +ncol(combn(1:10, m = 4)) + ncol(combn(1:10, m = 5)) + ncol(combn(1:10, m = 6)) +
ncol(combn(1:10, m = 7)) +ncol(combn(1:10, m = 8))+ncol(combn(1:10, m = 9))+ncol(combn(1:10, m = 10))*0.3/60/60
ncol(combn(1:10, m = 2)) +ncol(combn(1:10, m = 3)) +ncol(combn(1:10, m = 4)) + ncol(combn(1:10, m = 5)) + ncol(combn(1:10, m = 6)) +
ncol(combn(1:10, m = 7)) +ncol(combn(1:10, m = 8))+ncol(combn(1:10, m = 9))+ncol(combn(1:10, m = 10))*0.3
ncol(combn(1:10, m = 2)) +ncol(combn(1:10, m = 3)) +ncol(combn(1:10, m = 4)) + ncol(combn(1:10, m = 5)) + ncol(combn(1:10, m = 6)) +
ncol(combn(1:10, m = 7)) +ncol(combn(1:10, m = 8))+ncol(combn(1:10, m = 9))+ncol(combn(1:10, m = 10))*0.3/60
1013/60
1013/60/60
plot(relaimpo::calc.relimp(mod_lon_lat))
relaimpo::calc.relimp(mod_lon_lat)
plot(relaimpo::calc.relimp(mod_lon_lat))
shapiro.test(df$bird_diversity)
shapiro.test(df$bird_diversity %>% log)
shapiro.test(df$bird_diversity %>% log10)
hist(df$bird_diversity)
hist(df$bird_diversity %>% log10)
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(2000))
shapiro.test(rnorm(2000))
shapiro.test(rnorm(2000))
shapiro.test(rnorm(2000))
shapiro.test(rnorm(2000))
shapiro.test(rnorm(2000))
shapiro.test(rnorm(2000))
shapiro.test(rnorm(2000))
shapiro.test(rnorm(2000))
shapiro.test(rnorm(2000))
shapiro.test(rnorm(2000))
shapiro.test(rnorm(2000))
shapiro.test(rnorm(2000))
shapiro.test(rnorm(2000))
hist(df$bird_diversity)
plot(semivario, smooth = FALSE)
plot(semivario, smooth = FALSE)
plot(semivario, smooth = TRUE)
mod4 <- gls(bird_diversity ~ tree_diversity, correlation = corExp(form = ~ lon_x + lat_y, nugget = TRUE), data = df)
styler:::style_selection()
semivario <- Variogram(mod_gaus, form = ~Lon_x + Lat_y, resType = "normalized")
semivario <- Variogram(mod_gaus, form = ~lon_x + lat_y, resType = "normalized")
plot(semivario, smooth = TRUE)
summary(mod_gaus)
mod_gaus
coef(mod_gaus)
coef(mod)
coef(mod1)
AIC(mod1, mod_gaus, mod_lin, mod_spher, mod_ratio)
tab_model(mod1)
tab_model(mod1, mod_gaus)
mod_gaus
xaringan:::inf_mr()
seq(1:3, each = 13)
seq(1:3, each = 13)
seq(1:3, time = 13)
seq(1:3, times = 13)
rep(1:3, each = 13)
rep(1:(max(26)/13), each = 13)
rep(1:(max(27)/13), each = 13)
rep(1:(max(14)/13), each = 13)
rep(1:(max(14)/13), each = 13) %>% length()
rep(1:(max(37)/13), each = 13) %>% length()
rep(1:50, each = 13) %>% length()
rep(1:(max(26)/13), each = 13)
rep(1:(max(26)/13), each = 13)lag
rep(1:(max(26)/13), each = 13) %>% lag
rep(1:(max(37)/13), each = 13)
ccc = rep(1:(max(37)/13), each = 13)
ddd = 1:17
cbind(ccc, ddd)
rbind(ccc, ddd)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
dev = "svg",
fig.width = 7,
fig.height = 5,
fig.align = "center",
tidy = TRUE,
tidy.opts = list(width.cutoff = 50)
)
library(tidyverse)
library(extrafont)
loadfonts(quiet = TRUE)
theme_set(theme_bw(base_size = 16, base_family = "Open Sans"))
library(ape)
library(pgirmess)
library(nlme)
library(sjPlot)
moran <- Moran.I(df$bird_diversity, sample_distances_inv, alternative = "greater")
moran
moran <- Moran.I(df$bird_diversity, sample_distances_inv, alternative = "less")
moran
semivario <- Variogram(mod_gaus, form = ~lon_x + lat_y, resType = "normalized")
semivario
semivario <- Variogram(mod_gaus, form = ~lon_x + lat_y, resType = "normalized")
semivario
tab_model(mod1 = mod1, mod_gaus)
tab_model(mod1 = "mod1", mod_gaus)
tab_model(mod1, mod_gaus, dv.labels = c("NULL model", "Gaussian model"))
View(df)
languageR::pairscor.fnc(df)
df %>%
select(-site) %>%
languageR::pairscor.fnc()
df %>%
select(-site, -tree_diversit) %>%
languageR::pairscor.fnc()
df %>%
select(-site, -tree_diversity) %>%
languageR::pairscor.fnc()
xaringan:::inf_mr()
rmd_files <- list.files("*.Rmd")
rmd_files
rmd_files <- list.files(pattern = "*.Rmd")
rmd_files
rmd_files <- list.files(pattern = "*.Rmd", full.names = TRUE)
rmarkdown::render(rmd_files[1])
rmarkdown::render(rmd_files[2])
library(furrr)
rmd_files <- list.files(pattern = "*.Rmd", full.names = TRUE)
source('~/.active-rstudio-document', echo=TRUE)
rmarkdown::render(rmd_files[7])
rmd_files <- list.files(pattern = "*.Rmd", full.names = TRUE)
rmarkdown::render(rmd_files[7])
styler:::style_selection()
source('/media/work/courses/denmark-2019/render_rmd.R', echo=TRUE)
source('/media/work/courses/denmark-2019/render_rmd.R', echo=TRUE)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
dev = "svg",
fig.width = 7,
fig.height = 5,
fig.align = "center",
tidy = TRUE,
tidy.opts = list(width.cutoff = 50)
)
library(tidyverse)
library(extrafont)
loadfonts(quiet = TRUE)
theme_set(theme_bw(base_size = 16, base_family = "Open Sans"))
library(ape)
library(pgirmess)
library(nlme)
library(sjPlot)
set.seed(1)
par(mfrow = c(1, 3))
m <- matrix(0, 9, 9)
m[1:4, ] <- 1
image(m, col = 0:1, xlim = c(-.05, .93), ylim = c(-.05, .93), main = "Positive spatial autocorrelation", cex.main = 2.5, cex.axis = 2, xaxt = "n", yaxt = "n")
image(matrix(1:0, 9, 9), col = 0:1, xlim = c(-.05, .93), ylim = c(-.05, .93), main = "Negative spatial autocorrelation", cex.main = 2.5, cex.axis = 2, xaxt = "n", yaxt = "n")
image(matrix(sample(c(0, 1), 81, replace = TRUE), 9, 9), col = 0:1, xlim = c(-.05, .93), ylim = c(-.05, .93), main = "No spatial autocorrelation", cex.main = 2.5, cex.axis = 2, xaxt = "n", yaxt = "n")
set.seed(1)
par(mfrow = c(1, 3))
m <- matrix(0, 9, 9)
m[1:4, ] <- 1
image(m, col = 0:1, xlim = c(-.05, .93), ylim = c(-.05, .93), main = "Positive spatial autocorrelation", cex.main = 2.5, cex.axis = 2, xaxt = "n", yaxt = "n", sub = "Positive I", cex.sub = 4)
image(matrix(1:0, 9, 9), col = 0:1, xlim = c(-.05, .93), ylim = c(-.05, .93), main = "Negative spatial autocorrelation", cex.main = 2.5, cex.axis = 2, xaxt = "n", yaxt = "n", sub = "Negative I", cex.sub = 4)
image(matrix(sample(c(0, 1), 81, replace = TRUE), 9, 9), col = 0:1, xlim = c(-.05, .93), ylim = c(-.05, .93), main = "No spatial autocorrelation", cex.main = 2.5, cex.axis = 2, xaxt = "n", yaxt = "n", sub = "I around 0", cex.sub = 4)
df <- read_table2("data/bird.diversity.txt") # Load tidyverse first
df <- janitor::clean_names(df) # Clean column names
df
ggplot(df, aes(x = tree_diversity, y = bird_diversity)) +
geom_point(size = 3) +
geom_smooth(method = "lm")
ggplot(df, aes(x = lon_x, y = lat_y, size = bird_diversity)) +
geom_point()
df
df %>%
dplyr::select(-site, -tree_diversity) %>%
languageR::pairscor.fnc()
source('/media/work/courses/denmark-2019/render_rmd.R', echo=TRUE)
library(furrr)
source('/media/work/courses/denmark-2019/render_rmd.R', echo=TRUE)
source('/media/work/courses/denmark-2019/render_rmd.R', echo=TRUE)
library(purrr)
rmd_files <- list.files(pattern = "*.Rmd", full.names = TRUE)
walk(rmd_files, rmarkdown::render)
rmd_files
walk(rmd_files, rmarkdown::render)
